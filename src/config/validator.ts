import { FrontendConfig } from './types';

export function validateConfig(config: FrontendConfig): boolean {
  const required = [
    'app.name',
    'app.version',
    'api.baseURL',
    'ui.theme.primaryColor',
    'ui.theme.accentColor',
    'ui.theme.errorColor',
    'ui.theme.warningColor',
    'ui.theme.backgroundColor',
    'ui.theme.surfaceColor',
    'ui.theme.textColor',
    'ui.theme.secondaryTextColor',
    'ui.animations.enabled',
    'ui.animations.duration',
    'ui.animations.springConfig.tension',
    'ui.animations.springConfig.friction',
    'ui.layout.defaultItemsPerPage',
    'ui.layout.maxItemsPerPage',
    'ui.layout.listItemHeight',
    'ui.layout.headerHeight',
    'ui.layout.tabBarHeight',
    'ui.layout.searchBarHeight',
    'performance.virtualization.enabled',
    'performance.virtualization.windowSize',
    'performance.virtualization.initialNumToRender',
    'performance.virtualization.maxToRenderPerBatch',
    'performance.virtualization.updateCellsBatchingPeriod',
    'performance.caching.maxCacheSize',
    'performance.caching.cacheTTL',
    'performance.caching.enableImageCache',
    'performance.caching.enableQueryCache',
    'performance.debouncing.searchDelay',
    'performance.debouncing.scrollDelay',
    'performance.debouncing.inputDelay',
    'storage.encryption',
    'storage.maxStorageSize',
    'storage.autoCleanup',
    'storage.cleanupInterval',
    'storage.keys.userPreferences',
    'storage.keys.contactCache',
    'storage.keys.searchHistory',
    'storage.keys.appSettings',
    'permissions.contacts.required',
    'permissions.camera.required',
    'permissions.notifications.required',
    'logging.level',
    'logging.enableConsole',
    'logging.enableFileLogging',
    'logging.maxLogFiles',
    'logging.maxLogSize',
    'logging.categories.network',
    'logging.categories.database',
    'logging.categories.ui',
    'logging.categories.performance',
    'logging.categories.errors',
    'development.enableDebugMode',
    'development.enableHotReload',
    'development.enableFlipper',
    'development.enableDevMenu',
    'development.mockData',
    'development.bypassAuth',
    'analytics.enabled',
    'analytics.provider',
    'analytics.trackingId',
    'analytics.enableAutoTracking',
    'analytics.events.contactView',
    'analytics.events.contactSearch',
    'analytics.events.contactEdit',
    'analytics.events.appLaunch',
    'analytics.events.featureUsage',
    'security.enablePinLock',
    'security.enableBiometrics',
    'security.sessionTimeout',
    'security.maxFailedAttempts',
    'security.lockoutDuration',
    'security.encryptSensitiveData',
    'contacts.maxContacts',
    'contacts.sortOptions',
    'contacts.defaultSort',
    'contacts.defaultSortDirection',
    'contacts.searchFields',
    'contacts.sources.device',
    'contacts.sources.google',
    'contacts.sources.icloud',
    'contacts.sources.exchange',
    'contacts.sources.sim',
    'network.enableOfflineMode',
    'network.syncInterval',
    'network.maxRetries',
    'network.timeoutDuration',
    'network.enableCompression',
    'network.userAgent',
    'experimental.enableNewArchitecture',
    'experimental.enableConcurrentFeatures',
    'experimental.enableFabric',
    'experimental.enableHermes',
    'experimental.enableNewLogBox'
  ];

  return required.every(path =>
    path.split('.').reduce((obj, key) => obj?.[key], config) !== undefined
  );
}